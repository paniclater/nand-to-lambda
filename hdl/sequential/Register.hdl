// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/Register.hdl

/**
 * 16-bit register
 * If load[t]=1 then out[t+1] = in[t]
 * else out does not change
 */

CHIP Register {
    IN in[16], load;
    OUT out[16];

    PARTS:
    Mux(a=dff0out, b=in[0], sel=load, out=dff0in);
    DFF(in=dff0in, out=dff0out, out=out[0]);
    Mux(a=dff1out, b=in[1], sel=load, out=dff1in);
    DFF(in=dff1in, out=dff1out, out=out[1]);
    Mux(a=dff2out, b=in[2], sel=load, out=dff2in);
    DFF(in=dff2in, out=dff2out, out=out[2]);
    Mux(a=dff3out, b=in[3], sel=load, out=dff3in);
    DFF(in=dff3in, out=dff3out, out=out[3]);
    Mux(a=dff4out, b=in[4], sel=load, out=dff4in);
    DFF(in=dff4in, out=dff4out, out=out[4]);
    Mux(a=dff5out, b=in[5], sel=load, out=dff5in);
    DFF(in=dff5in, out=dff5out, out=out[5]);
    Mux(a=dff6out, b=in[6], sel=load, out=dff6in);
    DFF(in=dff6in, out=dff6out, out=out[6]);
    Mux(a=dff7out, b=in[7], sel=load, out=dff7in);
    DFF(in=dff7in, out=dff7out, out=out[7]);
    Mux(a=dff8out, b=in[8], sel=load, out=dff8in);
    DFF(in=dff8in, out=dff8out, out=out[8]);
    Mux(a=dff9out, b=in[9], sel=load, out=dff9in);
    DFF(in=dff9in, out=dff9out, out=out[9]);
    Mux(a=dff10out, b=in[10], sel=load, out=dff10in);
    DFF(in=dff10in, out=dff10out, out=out[10]);
    Mux(a=dff11out, b=in[11], sel=load, out=dff11in);
    DFF(in=dff11in, out=dff11out, out=out[11]);
    Mux(a=dff12out, b=in[12], sel=load, out=dff12in);
    DFF(in=dff12in, out=dff12out, out=out[12]);
    Mux(a=dff13out, b=in[13], sel=load, out=dff13in);
    DFF(in=dff13in, out=dff13out, out=out[13]);
    Mux(a=dff14out, b=in[14], sel=load, out=dff14in);
    DFF(in=dff14in, out=dff14out, out=out[14]);
    Mux(a=dff15out, b=in[15], sel=load, out=dff15in);
    DFF(in=dff15in, out=dff15out, out=out[15]);
}
